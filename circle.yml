machine:
   services:
      - docker
   environment:
      GOPATH: "/home/ubuntu/go"
      PATH: "/usr/local/go/bin:/home/ubuntu/go/bin:$PATH"

checkout:
   post:
      - mkdir -p "${GOPATH}/src/github.com/${CIRCLE_PROJECT_USERNAME}/"
      - cp -R "${HOME}/${CIRCLE_PROJECT_REPONAME}/" "${GOPATH}/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}"

dependencies:
  pre:
    - docker pull mongo:3.0.2
    - docker run -d -P mongo:3.0.2
    - docker port $(docker ps | grep mongo | awk '{print $1}') 27017
    - go get github.com/axw/gocov/gocov; go get github.com/matm/gocov-html; go get -u github.com/jstemmer/go-junit-report
    - go get -u github.com/kardianos/govendor
    - govendor sync -v:
         pwd: ../../../${GOPATH}/src/github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}

test:
  pre:
    - go get github.com/mattn/goveralls
  override:
    - mkdir -p $CIRCLE_TEST_REPORTS/golang
    - |
      export MONGO_TEST_URL=$(docker port $(docker ps | grep mongo | awk '{print $1}') 27017);
      go test -race -v ./... | go-junit-report > $CIRCLE_TEST_REPORTS/golang/junit.xml
    - |
      export MONGO_TEST_URL=$(docker port $(docker ps | grep mongo | awk '{print $1}') 27017);
      go list ./... | awk -F/ '{print $4}' | xargs -I {} go test -v -cover -race -coverprofile=$CIRCLE_ARTIFACTS/{}.out ./{}
    - cd $CIRCLE_ARTIFACTS && sed -i '1d' *.out
    - |
      echo "mode: atomic" > $CIRCLE_ARTIFACTS/overall-coverage.result
    - cd $CIRCLE_ARTIFACTS && cat *.out >> overall-coverage.result
  post:
    - goveralls -coverprofile=$CIRCLE_ARTIFACTS/overall-coverage.result -service=circle-ci -repotoken=$COVERALLS_TOKEN
    - bash <(curl -s https://codecov.io/bash)
