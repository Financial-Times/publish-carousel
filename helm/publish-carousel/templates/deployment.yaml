apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.service.name }} 
  labels:
    chart: "{{ .Chart.Name | trunc 63 }}"
    chartVersion: "{{ .Chart.Version | trunc 63 }}" 
    visualize: "true" 
    app: {{ .Values.service.name }} 
spec:
  replicas: {{ .Values.replicaCount }} 
  selector: 
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        visualize: "true" 
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Values.service.name }}
            topologyKey: "kubernetes.io/hostname"
      containers: 
      - name: {{ .Values.service.name }} 
        image: "{{ .Values.image.repository }}:{{ .Chart.Version }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: ETCD_PEERS
          value: {{ .Values.env.etcd_peers }}
        - name: MONGO_DB_URL
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: mongo.addresses
        - name: MONGO_NODE_COUNT
          value: "{{ .Values.env.mongodb.node_count }}"
        - name: CMS_NOTIFIER_URL
          value: {{ .Values.env.cmsnotifier.url }}
        - name: PAM_URL
          value: {{ .Values.env.pam.url }}
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: aws.region
        - name: LAGCHECK_URL
          value: {{ .Values.env.lagcheck.url }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: aws.access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: global-secrets
              key: aws.secret_access_key
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: global-config
              key: publish.carousel.s3.bucket
        - name: MONGO_DB_TIMEOUT
          value: "{{ .Values.env.mongodb.timeout }}"
        - name: DEFAULT_THROTTLE
          value: "{{ .Values.env.throttle }}"
        - name: CONFIGS_DIR
          value: "/configs"
        - name: CREDENTIALS_DIR
          value: "/credentials"
        volumeMounts:
          - name: monitor-configs-volume
            mountPath: /configs
          - name: secrets-volume
            mountPath: /credentials
        ports:
        - containerPort: 8080
        - containerPort: 8081
        livenessProbe: 
          tcpSocket: 
            port: 8080 
          initialDelaySeconds: 70 
        readinessProbe: 
          httpGet: 
            path: "/__gtg" 
            port: 8080 
          initialDelaySeconds: 70 
          periodSeconds: 30 
        resources: 
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: monitor-configs-volume
        projected:
          sources:
          - configMap:
              name: global-config
              items:
              - key: publish_monitor.read_environments
                path: read.environments
          - configMap:
              name: publish-carousel-configs
      - name: secrets-volume
        secret:
          secretName: global-secrets
          items:
          - key: publish_monitor.read_credentials
            path: read.credentials
