version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Financial-Times/publish-carousel
    docker:
      - image: golang:1.7.5
        environment:
          GOPATH: /go
          MONGO_TEST_URL: localhost:27017
      - image: mongo:3.0.2
    steps:
      - checkout
      - run:
          name: External Dependencies
          command: |
            go get github.com/axw/gocov/gocov
            go get github.com/matm/gocov-html
            go get github.com/mattn/goveralls
            go get -u github.com/jstemmer/go-junit-report
            go get -u github.com/kardianos/govendor
      - run:
          name: Test Results
          command: |
            mkdir -p /tmp/test-results
            mkdir -p /tmp/coverage-results
      - run:
          name: Govendor Sync
          command: govendor sync -v
      - run:
          name: Go Build
          command: go build -v
      - run:
          name: Run Tests
          command: |
            go list ./... | grep -v vendor | awk -F/ '{print $4}' | xargs -I {} go test -v -cover -race -coverprofile=/tmp/coverage-results/{}.out ./{}
            mkdir -p /tmp/test-results/
            go list ./... | grep -v vendor | awk -F/ '{print $4}' | xargs -I {} go test -v -race ./{} | /go/bin/go-junit-report > /tmp/test-results/{}.xml
      - run:
          name: Combine Coverage Results
          command: |
            sed -i '1d' /tmp/coverage-results/*.out
            echo "mode: atomic" > /tmp/coverage-results/overall-coverage.result
            cat /tmp/coverage-results/*.out >> /tmp/coverage-results/overall-coverage.result
      - run:
          name: Upload Coverage
          command: /go/bin/goveralls -coverprofile=/tmp/coverage-results/overall-coverage.result -service=circle-ci -repotoken=$COVERALLS_TOKEN
      - store_test_results:
          path: /tmp/test-results
  dockerfile:
    working_directory: /publish-carousel
    docker:
      - image: docker:1.12.6-git
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .
